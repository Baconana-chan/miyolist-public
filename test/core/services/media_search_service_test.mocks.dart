// Mocks generated by Mockito 5.4.4 from annotations
// in miyolist/test/core/services/media_search_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:hive_flutter/hive_flutter.dart' as _i2;
import 'package:miyolist/core/models/character_details.dart' as _i9;
import 'package:miyolist/core/models/media_details.dart' as _i8;
import 'package:miyolist/core/models/media_list_entry.dart' as _i7;
import 'package:miyolist/core/models/staff_details.dart' as _i10;
import 'package:miyolist/core/models/studio_details.dart' as _i11;
import 'package:miyolist/core/models/sync_conflict.dart' as _i14;
import 'package:miyolist/core/models/user_model.dart' as _i6;
import 'package:miyolist/core/models/user_settings.dart' as _i13;
import 'package:miyolist/core/services/anilist_service.dart' as _i16;
import 'package:miyolist/core/services/auth_service.dart' as _i4;
import 'package:miyolist/core/services/local_storage_service.dart' as _i5;
import 'package:miyolist/core/services/supabase_service.dart' as _i15;
import 'package:mockito/mockito.dart' as _i1;
import 'package:supabase_flutter/supabase_flutter.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseClient_1 extends _i1.SmartFake
    implements _i3.SupabaseClient {
  _FakeSupabaseClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthService_2 extends _i1.SmartFake implements _i4.AuthService {
  _FakeAuthService_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i5.LocalStorageService {
  MockLocalStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Box<_i6.UserModel> get userBox => (super.noSuchMethod(
        Invocation.getter(#userBox),
        returnValue: _FakeBox_0<_i6.UserModel>(
          this,
          Invocation.getter(#userBox),
        ),
      ) as _i2.Box<_i6.UserModel>);

  @override
  _i2.Box<_i7.MediaListEntry> get animeListBox => (super.noSuchMethod(
        Invocation.getter(#animeListBox),
        returnValue: _FakeBox_0<_i7.MediaListEntry>(
          this,
          Invocation.getter(#animeListBox),
        ),
      ) as _i2.Box<_i7.MediaListEntry>);

  @override
  _i2.Box<_i7.MediaListEntry> get mangaListBox => (super.noSuchMethod(
        Invocation.getter(#mangaListBox),
        returnValue: _FakeBox_0<_i7.MediaListEntry>(
          this,
          Invocation.getter(#mangaListBox),
        ),
      ) as _i2.Box<_i7.MediaListEntry>);

  @override
  _i2.Box<dynamic> get favoritesBox => (super.noSuchMethod(
        Invocation.getter(#favoritesBox),
        returnValue: _FakeBox_0<dynamic>(
          this,
          Invocation.getter(#favoritesBox),
        ),
      ) as _i2.Box<dynamic>);

  @override
  _i2.Box<dynamic> get settingsBox => (super.noSuchMethod(
        Invocation.getter(#settingsBox),
        returnValue: _FakeBox_0<dynamic>(
          this,
          Invocation.getter(#settingsBox),
        ),
      ) as _i2.Box<dynamic>);

  @override
  _i2.Box<_i8.MediaDetails> get mediaCacheBox => (super.noSuchMethod(
        Invocation.getter(#mediaCacheBox),
        returnValue: _FakeBox_0<_i8.MediaDetails>(
          this,
          Invocation.getter(#mediaCacheBox),
        ),
      ) as _i2.Box<_i8.MediaDetails>);

  @override
  _i2.Box<_i9.CharacterDetails> get characterCacheBox => (super.noSuchMethod(
        Invocation.getter(#characterCacheBox),
        returnValue: _FakeBox_0<_i9.CharacterDetails>(
          this,
          Invocation.getter(#characterCacheBox),
        ),
      ) as _i2.Box<_i9.CharacterDetails>);

  @override
  _i2.Box<_i10.StaffDetails> get staffCacheBox => (super.noSuchMethod(
        Invocation.getter(#staffCacheBox),
        returnValue: _FakeBox_0<_i10.StaffDetails>(
          this,
          Invocation.getter(#staffCacheBox),
        ),
      ) as _i2.Box<_i10.StaffDetails>);

  @override
  _i2.Box<_i11.StudioDetails> get studioCacheBox => (super.noSuchMethod(
        Invocation.getter(#studioCacheBox),
        returnValue: _FakeBox_0<_i11.StudioDetails>(
          this,
          Invocation.getter(#studioCacheBox),
        ),
      ) as _i2.Box<_i11.StudioDetails>);

  @override
  _i12.Future<void> saveUser(_i6.UserModel? user) => (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [user],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> saveAnimeList(List<_i7.MediaListEntry>? entries) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAnimeList,
          [entries],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  List<_i7.MediaListEntry> getAnimeList() => (super.noSuchMethod(
        Invocation.method(
          #getAnimeList,
          [],
        ),
        returnValue: <_i7.MediaListEntry>[],
      ) as List<_i7.MediaListEntry>);

  @override
  _i12.Future<void> saveMangaList(List<_i7.MediaListEntry>? entries) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMangaList,
          [entries],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  List<_i7.MediaListEntry> getMangaList() => (super.noSuchMethod(
        Invocation.method(
          #getMangaList,
          [],
        ),
        returnValue: <_i7.MediaListEntry>[],
      ) as List<_i7.MediaListEntry>);

  @override
  _i12.Future<void> updateAnimeEntry(_i7.MediaListEntry? entry) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAnimeEntry,
          [entry],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateMangaEntry(_i7.MediaListEntry? entry) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMangaEntry,
          [entry],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteAnimeEntry(int? entryId) => (super.noSuchMethod(
        Invocation.method(
          #deleteAnimeEntry,
          [entryId],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteMangaEntry(int? entryId) => (super.noSuchMethod(
        Invocation.method(
          #deleteMangaEntry,
          [entryId],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> saveFavorites(Map<String, dynamic>? favorites) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFavorites,
          [favorites],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> saveLastSyncTime(DateTime? time) => (super.noSuchMethod(
        Invocation.method(
          #saveLastSyncTime,
          [time],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> saveUserSettings(_i13.UserSettings? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserSettings,
          [settings],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  bool isPublicProfile() => (super.noSuchMethod(
        Invocation.method(
          #isPublicProfile,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isCloudSyncEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isCloudSyncEnabled,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i12.Future<void> saveConflictResolutionStrategy(
          _i14.ConflictResolutionStrategy? strategy) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveConflictResolutionStrategy,
          [strategy],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> saveMediaDetails(_i8.MediaDetails? media) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMediaDetails,
          [media],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i8.MediaDetails? getMediaDetails(int? mediaId) =>
      (super.noSuchMethod(Invocation.method(
        #getMediaDetails,
        [mediaId],
      )) as _i8.MediaDetails?);

  @override
  List<_i8.MediaDetails> getAllCachedMedia() => (super.noSuchMethod(
        Invocation.method(
          #getAllCachedMedia,
          [],
        ),
        returnValue: <_i8.MediaDetails>[],
      ) as List<_i8.MediaDetails>);

  @override
  _i12.Future<void> saveCharacterDetails(_i9.CharacterDetails? character) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCharacterDetails,
          [character],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i9.CharacterDetails? getCharacterDetails(int? characterId) =>
      (super.noSuchMethod(Invocation.method(
        #getCharacterDetails,
        [characterId],
      )) as _i9.CharacterDetails?);

  @override
  List<_i9.CharacterDetails> getAllCachedCharacters() => (super.noSuchMethod(
        Invocation.method(
          #getAllCachedCharacters,
          [],
        ),
        returnValue: <_i9.CharacterDetails>[],
      ) as List<_i9.CharacterDetails>);

  @override
  _i12.Future<void> saveStaffDetails(_i10.StaffDetails? staff) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveStaffDetails,
          [staff],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i10.StaffDetails? getStaffDetails(int? staffId) =>
      (super.noSuchMethod(Invocation.method(
        #getStaffDetails,
        [staffId],
      )) as _i10.StaffDetails?);

  @override
  List<_i10.StaffDetails> getAllCachedStaff() => (super.noSuchMethod(
        Invocation.method(
          #getAllCachedStaff,
          [],
        ),
        returnValue: <_i10.StaffDetails>[],
      ) as List<_i10.StaffDetails>);

  @override
  _i12.Future<void> saveStudioDetails(_i11.StudioDetails? studio) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveStudioDetails,
          [studio],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i11.StudioDetails? getStudioDetails(int? studioId) =>
      (super.noSuchMethod(Invocation.method(
        #getStudioDetails,
        [studioId],
      )) as _i11.StudioDetails?);

  @override
  List<_i11.StudioDetails> getAllCachedStudios() => (super.noSuchMethod(
        Invocation.method(
          #getAllCachedStudios,
          [],
        ),
        returnValue: <_i11.StudioDetails>[],
      ) as List<_i11.StudioDetails>);

  @override
  _i12.Future<void> clearExpiredCache(
          {Duration? maxAge = const Duration(days: 7)}) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearExpiredCache,
          [],
          {#maxAge: maxAge},
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<int> getDatabaseSizeInBytes() => (super.noSuchMethod(
        Invocation.method(
          #getDatabaseSizeInBytes,
          [],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<double> getDatabaseSizeInMB() => (super.noSuchMethod(
        Invocation.method(
          #getDatabaseSizeInMB,
          [],
        ),
        returnValue: _i12.Future<double>.value(0.0),
      ) as _i12.Future<double>);

  @override
  _i12.Future<Map<String, dynamic>> getDatabaseStats() => (super.noSuchMethod(
        Invocation.method(
          #getDatabaseStats,
          [],
        ),
        returnValue:
            _i12.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i12.Future<Map<String, dynamic>>);

  @override
  _i12.Future<bool> isDatabaseSizeExceeded() => (super.noSuchMethod(
        Invocation.method(
          #isDatabaseSizeExceeded,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<void> enforceSizeLimit() => (super.noSuchMethod(
        Invocation.method(
          #enforceSizeLimit,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [SupabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseService extends _i1.Mock implements _i15.SupabaseService {
  MockSupabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  _i3.SupabaseClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeSupabaseClient_1(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.SupabaseClient);

  @override
  _i12.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> syncUserData(Map<String, dynamic>? userData) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncUserData,
          [userData],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> syncAnimeList(
    int? userId,
    List<Map<String, dynamic>>? animeList, {
    _i14.SyncMetadata? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncAnimeList,
          [
            userId,
            animeList,
          ],
          {#metadata: metadata},
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> syncMangaList(
    int? userId,
    List<Map<String, dynamic>>? mangaList, {
    _i14.SyncMetadata? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncMangaList,
          [
            userId,
            mangaList,
          ],
          {#metadata: metadata},
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<Map<String, dynamic>?> fetchUserData(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserData,
          [userId],
        ),
        returnValue: _i12.Future<Map<String, dynamic>?>.value(),
      ) as _i12.Future<Map<String, dynamic>?>);

  @override
  _i12.Future<List<Map<String, dynamic>>> fetchAnimeList(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAnimeList,
          [userId],
        ),
        returnValue: _i12.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i12.Future<List<Map<String, dynamic>>>);

  @override
  _i12.Future<List<Map<String, dynamic>>> fetchMangaList(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMangaList,
          [userId],
        ),
        returnValue: _i12.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i12.Future<List<Map<String, dynamic>>>);

  @override
  _i12.Future<void> updateAnimeEntry(
    int? userId,
    Map<String, dynamic>? entry, {
    _i14.SyncMetadata? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAnimeEntry,
          [
            userId,
            entry,
          ],
          {#metadata: metadata},
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateMangaEntry(
    int? userId,
    Map<String, dynamic>? entry, {
    _i14.SyncMetadata? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMangaEntry,
          [
            userId,
            entry,
          ],
          {#metadata: metadata},
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> syncFavorites(
    int? userId,
    Map<String, dynamic>? favorites,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncFavorites,
          [
            userId,
            favorites,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> cacheMediaDetails(_i8.MediaDetails? media) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheMediaDetails,
          [media],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i8.MediaDetails>> searchMedia(
    String? query,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMedia,
          [
            query,
            type,
          ],
        ),
        returnValue:
            _i12.Future<List<_i8.MediaDetails>>.value(<_i8.MediaDetails>[]),
      ) as _i12.Future<List<_i8.MediaDetails>>);

  @override
  _i12.Future<_i8.MediaDetails?> getMediaFromCache(int? mediaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaFromCache,
          [mediaId],
        ),
        returnValue: _i12.Future<_i8.MediaDetails?>.value(),
      ) as _i12.Future<_i8.MediaDetails?>);
}

/// A class which mocks [AniListService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAniListService extends _i1.Mock implements _i16.AniListService {
  MockAniListService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AuthService get authService => (super.noSuchMethod(
        Invocation.getter(#authService),
        returnValue: _FakeAuthService_2(
          this,
          Invocation.getter(#authService),
        ),
      ) as _i4.AuthService);

  @override
  _i12.Future<Map<String, dynamic>?> fetchCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #fetchCurrentUser,
          [],
        ),
        returnValue: _i12.Future<Map<String, dynamic>?>.value(),
      ) as _i12.Future<Map<String, dynamic>?>);

  @override
  _i12.Future<List<dynamic>?> fetchAnimeList(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAnimeList,
          [userId],
        ),
        returnValue: _i12.Future<List<dynamic>?>.value(),
      ) as _i12.Future<List<dynamic>?>);

  @override
  _i12.Future<List<dynamic>?> fetchMangaList(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMangaList,
          [userId],
        ),
        returnValue: _i12.Future<List<dynamic>?>.value(),
      ) as _i12.Future<List<dynamic>?>);

  @override
  _i12.Future<Map<String, dynamic>?> updateMediaListEntry({
    int? entryId,
    int? mediaId,
    String? status,
    double? score,
    int? progress,
    int? progressVolumes,
    String? notes,
    List<String>? customLists,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMediaListEntry,
          [],
          {
            #entryId: entryId,
            #mediaId: mediaId,
            #status: status,
            #score: score,
            #progress: progress,
            #progressVolumes: progressVolumes,
            #notes: notes,
            #customLists: customLists,
          },
        ),
        returnValue: _i12.Future<Map<String, dynamic>?>.value(),
      ) as _i12.Future<Map<String, dynamic>?>);

  @override
  _i12.Future<Map<String, dynamic>?> fetchUserFavorites(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserFavorites,
          [userId],
        ),
        returnValue: _i12.Future<Map<String, dynamic>?>.value(),
      ) as _i12.Future<Map<String, dynamic>?>);

  @override
  _i12.Future<List<_i8.MediaDetails>> searchMedia(
    String? query,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMedia,
          [
            query,
            type,
          ],
        ),
        returnValue:
            _i12.Future<List<_i8.MediaDetails>>.value(<_i8.MediaDetails>[]),
      ) as _i12.Future<List<_i8.MediaDetails>>);

  @override
  _i12.Future<_i8.MediaDetails?> getMediaDetails(int? mediaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaDetails,
          [mediaId],
        ),
        returnValue: _i12.Future<_i8.MediaDetails?>.value(),
      ) as _i12.Future<_i8.MediaDetails?>);

  @override
  _i12.Future<_i9.CharacterDetails?> getCharacterDetails(int? characterId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCharacterDetails,
          [characterId],
        ),
        returnValue: _i12.Future<_i9.CharacterDetails?>.value(),
      ) as _i12.Future<_i9.CharacterDetails?>);

  @override
  _i12.Future<_i10.StaffDetails?> getStaffDetails(int? staffId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStaffDetails,
          [staffId],
        ),
        returnValue: _i12.Future<_i10.StaffDetails?>.value(),
      ) as _i12.Future<_i10.StaffDetails?>);

  @override
  _i12.Future<_i11.StudioDetails?> getStudioDetails(int? studioId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStudioDetails,
          [studioId],
        ),
        returnValue: _i12.Future<_i11.StudioDetails?>.value(),
      ) as _i12.Future<_i11.StudioDetails?>);

  @override
  _i12.Future<List<Map<String, dynamic>>> globalSearch({
    required String? query,
    String? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalSearch,
          [],
          {
            #query: query,
            #type: type,
          },
        ),
        returnValue: _i12.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i12.Future<List<Map<String, dynamic>>>);

  @override
  _i12.Future<Map<String, dynamic>?> getMediaById(int? mediaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaById,
          [mediaId],
        ),
        returnValue: _i12.Future<Map<String, dynamic>?>.value(),
      ) as _i12.Future<Map<String, dynamic>?>);

  @override
  Map<String, dynamic> getRateLimiterStats() => (super.noSuchMethod(
        Invocation.method(
          #getRateLimiterStats,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i12.Future<List<Map<String, dynamic>>> advancedSearch({
    required String? query,
    String? type,
    List<String>? genres,
    int? year,
    String? season,
    String? format,
    String? status,
    int? scoreMin,
    int? scoreMax,
    int? episodesMin,
    int? episodesMax,
    int? chaptersMin,
    int? chaptersMax,
    String? sortBy = r'POPULARITY_DESC',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #advancedSearch,
          [],
          {
            #query: query,
            #type: type,
            #genres: genres,
            #year: year,
            #season: season,
            #format: format,
            #status: status,
            #scoreMin: scoreMin,
            #scoreMax: scoreMax,
            #episodesMin: episodesMin,
            #episodesMax: episodesMax,
            #chaptersMin: chaptersMin,
            #chaptersMax: chaptersMax,
            #sortBy: sortBy,
          },
        ),
        returnValue: _i12.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i12.Future<List<Map<String, dynamic>>>);
}
